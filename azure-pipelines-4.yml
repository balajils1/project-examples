# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: JFrogAudit@1
  inputs:
    xrayConnection: 'demo-xray'
    workingDirectory: 'ctest'
    watchesSource: 'project'
    project: 'alpha'
    allowFailBuild: true

- task: JFrogMaven@1
  inputs:
    mavenPomFile: 'ctest/pom.xml'
    goals: 'deploy'
    artifactoryResolverService: 'demo'
    targetResolveReleaseRepo: 'alpha-mvn-blr-libs-release'
    targetResolveSnapshotRepo: 'alpha-mvn-blr-libs-snapshot'
    artifactoryDeployService: 'demo'
    targetDeployReleaseRepo: 'alpha-mvn-blr-libs-release-local'
    targetDeploySnapshotRepo: 'alpha-mvn-blr-libs-snapshot'
    collectBuildInfo: true
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'
    javaHomeOption: 'JDKVersion'
    includeEnvVars: true
    projectKey: 'alpha'



- task: JFrogPublishBuildInfo@1
  inputs:
    artifactoryConnection: 'demo'
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'
    projectKey: 'alpha'

   
- task: CmdLine@2
  inputs:
    script: 'sleep 45s'

- task: JFrogBuildScan@1
  inputs:
    xrayConnection: 'demo-xray'
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'
    allowFailBuild: true
    vuln: false
    projectKey: 'alpha'
  

    